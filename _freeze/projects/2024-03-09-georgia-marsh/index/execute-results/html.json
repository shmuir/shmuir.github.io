{
  "hash": "eb43774533a5a011fa9a9c9f88b7c36d",
  "result": {
    "markdown": "---\ntitle: \"Invertebrate Investigations\"\n#subtitle: \"\"\ndescription: \"Animal life at the Georgia Coastal Ecosystem LTER Flux Tower\"\nauthor:\n  - name: Sam Muir\n    url: https://shmuir.github.io/\n    orcid: \n    affiliation: Bren School of Environmental Science & Management at University of California Santa Barbara\n    affiliation-url: https://bren.ucsb.edu/masters-programs/master-environmental-data-science\ndate: 03-09-2024\ncategories: [MEDS, Ecology, Coastal]\nbibliography: references.bib\ncitation:\n  url: https://shmuir.github.io/projects/2024-03-09-georgia-marsh/\nimage: infographic-final.png\nformat:\n  html:\n    code-fold: true\ndraft: false\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# libraries\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(sf)\nlibrary(sysfonts)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(ggtext)\nshowtext::showtext_auto()\n```\n:::\n\n\nFor this visualization project I am interested in investigating how the abundance of three different invertebrate animals at the Georgia Coastal Ecosystem LTER Flux Tower vary over time. Marsh Periwinkle Snails (*Littoraria irrorata*) are commonly found in coastal marshes and I want to see which months have the highest cumulative counts 2014-2022. Planthoppers (*Prokelisia sp.*) and Grasshoppers (*Caelifera sp.*) also utilize marsh grass as habitat and a food source, and I am interested in how their abundances change throughout the year and over the 2014-2022 time period.\n\nTo answer my questions, I am using data from the [Georgia Coastal Ecosystem Long-Term Ecological Research Flux Tower](https://gce-lter.marsci.uga.edu/portal/flux_tower.htm) on their [monthly vegetation and invertebrate population monitoring](https://search.dataone.org/view/https%3A%2F%2Fpasta.lternet.edu%2Fpackage%2Fmetadata%2Feml%2Fknb-lter-gce%2F604%2F92).\n\nFor data size and storage purposes, data was cleaned and prepared separately and I will just be reading the cleaned data. But, the code for this processing can be seen below. Data was downloaded from DataOne using the {metajam} package. This data collection includes many different data frames such as `stemheight` and `biomass`, but here I am just using `animals`. The `animals` data frame includes the following variables:\n\n-   `Date`: Survey date\n\n-   `Spartina_Zone`: *Spartina* grass height zone\n\n-   `Plot_Number`: Survey plot number\n\n-   `Latitude`: Collection latitude\n\n-   `Longitude`: Collection longitude\n\n-   `Grasshopper_Abundance_Index`: Grasshopper abundance classification\n\n-   `Prokelisia_Abundance_Index`: Planthopper abundance classification\n\n-   `Littoraria_Count`: Number of *Littoraria* snails\n\n-   `Littoraria_Quadrat_Area`: Quadrat number\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# download data from DataOne ---\ndownload_d1_data_pkg(\"https://gmn.lternet.edu/mn/v2/packages/application%2Fbagit-097/doi%3A10.6073%2Fpasta%2F9746c71b35e9f8c544ea12c601c33949\", path = here::here(\"data\"))\n\n# read in the data\nanimals <- read_csv(\"data/animals/PLT-GCEM-1610_Animals_9_0.CSV\", skip = 2)[-c(1,2),]\n\n# data cleaning \nanimals_clean <- animals %>%\n  clean_names() %>%\n  mutate_at(c(\"latitude\", \"longitude\", \"littoraria_count\"), as.numeric) %>% # change cols to numeric\n  mutate_at(c(\"grasshopper_abundance_index\", \"prokelisia_abundance_index\", \"littoraria_quadrat_area\", \"plot_number\", \"spartina_zone\"), as.factor) %>% # change cols to factor\n  mutate(date = lubridate::as_date(date),\n         year = as.factor(year(date)), # get year from the date\n         month = as.factor(month(date))) # change date to a date\n\nmonth.name.short = c(\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\")\n\n# prepare grasshopper data for heatmap ----\ninvert_binary <- animals_clean %>%\n  filter(year != 2013) %>% # data collection began par way through 2013\n  mutate(month_name = as.factor(month.name.short[month]), # adding the written out month name\n         month_name = factor(month_name, levels = month.name.short),\n         grasshopper_abundance_index = as.character(grasshopper_abundance_index), # convert abundance to character\n         prokelisia_abundance_index = as.character(prokelisia_abundance_index), # convert abundance to numeric\n         grasshopper_abundance_index = as.numeric(grasshopper_abundance_index), # convert abundance to character\n         prokelisia_abundance_index = as.numeric(prokelisia_abundance_index)) %>% # convert abundance to numeric\n  dplyr::select(month, month_name, year, date, grasshopper_abundance_index, prokelisia_abundance_index) %>% # select necessary columns\n  group_by(month_name, year) %>% # group to summarize counts \n  summarise(Grasshopper = max(grasshopper_abundance_index), # find the max for each month of each year\n            Planthopper = max(prokelisia_abundance_index), # find the max for each month of each year\n            Grasshopper = as.factor(Grasshopper), # re-factor the max values\n            Planthopper = as.factor(Planthopper)) # re-factor\n\n# add missing months to the data to NAs rather than blank observations\nadditional_data2 <- data.frame(\n  month_name = factor(c(\"Feb\", \"June\", \"Sept\", \"Oct\", \"Oct\", \"Nov\", \"Nov\"),\n                      levels = month.name.short), year = factor(c(2020, 2019, 2017, 2018, 2019, 2016, 2021))\n)\n\n# join additional month data to abundance data and pivot to be able to facet\nfull_heatmap_data <- full_join(invert_binary, additional_data2) %>%\n  pivot_longer(cols = Grasshopper:Planthopper, names_to = \"Animal\",\n               values_to = \"Abundance\") %>%\n  mutate(Animal = case_when(Animal == \"Grasshopper\" ~ \"**Grasshopper**<br>(*Caelifera*)\",\n                            Animal == \"Planthopper\" ~ \"**Planthopper**<br>(*Prokelisia*)\"))\n\n# prepare data for bar chart by month ----\nsnail_bar_month <- animals_clean %>%\n  filter(year != 2013) %>% # data collection began par way through 2013\n  mutate(month_name = as.factor(month.name[month]), # adding the written out month name\n         month_name = factor(month_name, levels = month.name)) %>%\n  dplyr::select(month, month_name, year, date, littoraria_count) %>% # select necessary cols\n  group_by(month_name) %>%\n  summarise(littoraria_count = sum(littoraria_count, na.rm = TRUE)) # find total time period counts per month\n\n# data prep for line plot ----\nsnail_plotting <- animals_clean %>%\n  filter(year != 2013) %>%\n  mutate(year_month = format(date, \"%y/%m\")) %>% # format into year month\n  group_by(year_month) %>%\n  summarise(counts = sum(littoraria_count, na.rm = TRUE)) %>% # find the sum for each month\n  mutate(year_month = ym(year_month)) # get the year month\n\n# save cleaned data\n# write_csv(snail_bar_month, \"snail_clean.csv\")\n# write_csv(full_heatmap_data, \"hopper_clean.csv\")\n```\n:::\n\n\nNow I will read in the cleaned data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in cleaned data\nsnails <- read_csv(\"data/snail_clean.csv\")\nhoppers <- read_csv(\"data/hopper_clean.csv\") %>%\n  mutate(Abundance = as.factor(Abundance))\n\n# define shortened versions of month names\nmonth.name.short = c(\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\")\n```\n:::\n\n\nTo answer my first question about Marsh Periwinkle Snail counts from 2014-2022, I chose to make bar plots showing the cumulative counts for each month over the time period. This is a clear way to visually see the differences between the months, and it highlighted the increase in snail abundance in the summer months. These summer months are also the typical egg hatching period for the Marsh Periwinkle, so I added a light grey box behind these bars and a label indicating this season. Additionally, the plot showed that there are also high snail counts in September, and digging more in the data revealed that two years, 2018 and 2022, had unusually high counts. With some research I found that September was unusually warm for both of these years. I added an annotation with an arrow to explain this intereting trend. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# bar plot----\nggplot(snails, aes(x = as.numeric(month_name), y = littoraria_count)) +\n  # add rectangle to indicate hatching season\n  geom_rect(aes(xmin = as.numeric(factor(\"June\", levels = month.name)) - 0.5, # adjust rectangle to go over the whole month\n                xmax = as.numeric(factor(\"August\", levels = month.name)) + 0.5, # adjust rectangle to go over the whole month\n                ymin = 0, ymax = 5200),\n            alpha = 0.1, fill = \"grey\", size = 0.7) + # change fill and border \n    geom_col(fill = \"#455D44\") +\n  scale_x_continuous(breaks = as.numeric(factor(month.name.short, levels = month.name.short)), labels = month.name.short) + # set x-axis labels to the month names\n  theme_bw() +\n  labs(x = \"**Month**\",\n       y = \"**Cumulative Snail Counts<br>(2014-2022)**\",\n       title = \"**Marsh Periwinkle Snail**\",\n       subtitle = \"(*Littoraria irrorata*)\") +\n  theme_minimal(base_family = \"fira condensed\") + # set theme\n# set theme - adjust axis lines, text size\n  theme(panel.grid = element_blank(),\n        axis.text.x = element_text(size = 28, color = \"black\"),\n        axis.text.y = element_text(size = 28, color = \"black\"),\n        axis.title.y = element_markdown(margin = margin(r = 15), size = 31),\n        axis.title.x = element_markdown(margin = margin(t = 15), size = 31),\n        panel.grid.major.y = element_line(color = \"black\", linetype = \"dotted\", linewidth = 1),\n        axis.line = element_line(color = \"black\"),\n        plot.title = element_markdown(size = 40, hjust = 0.5, family = \"fira condensed\"),\n        plot.subtitle = element_markdown(size = 28, hjust = 0.5)) +\n  annotate(geom = \"text\", # add text annotation to the rectangle indicator\n    x = 7, y = 5400, # adjust the positioning\n    label = \"bold(`Snail egg hatching season`)\",\n    size = 9, family = \"fira condensed\", parse = TRUE\n  ) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# heat map ----\nggplot(hoppers) +\n  geom_tile(aes(x = month_name, y = year, fill = Abundance), color = \"black\") +\n  scale_fill_manual(values = c(\"white\",\"#DFE3CE\",\"#BDCFA1\",\"#455D44\", \"#23341E\"),  # set color scale\n                    labels = c(\"Absent\",\"Rare\", \"Common\", \"Abundant\", \"Very Abundant\"), # change legend labels\n                    na.value = \"grey\") +\n  facet_wrap(~factor(Animal, levels=c(\"**Planthopper**<br>(*Prokelisia*)\", '**Grasshopper**<br>(*Caelifera*)')), ncol = 1, scales = \"free_x\") + # one plot for each animal\n  labs(title = \"\", \n       subtitle = \"\",\n       x = \"**Month**\",\n       y = \"**Year**\",\n       fill = \"**Abundance**\") +\n  theme_minimal(base_family = \"fira condensed\") +\n  # set theme options - adjust title, text, and grid lines\n  theme(axis.line = element_blank(),\n        panel.grid = element_blank(),\n        panel.border = element_blank(),\n        axis.text.x = element_text(size = 28, color = \"black\"),\n        axis.text.y = element_text(size = 28, color = \"black\"),\n        axis.title.y = element_markdown(margin = margin(r = 16), size = 31),\n        axis.title.x = element_markdown(margin = margin(t = 16), size = 31),\n        plot.title = element_markdown(size = 23, hjust = 0.5),  # Center the title\n        plot.subtitle = element_text(hjust = 0.5, size = 16),\n        legend.title = element_markdown(size = 33),\n        legend.text = element_text(size = 30),\n        strip.text = element_markdown(size = 40),\n        panel.spacing = unit(30, \"pt\"),\n        legend.key.width = unit(2.5, \"cm\"),\n        legend.key.height = unit(2.5, \"cm\"),\n        legend.background = element_rect(fill=alpha('#C8D8DE', 1),\n                                         color = \"#C8D8DE\"))\n```\n:::\n\n\nTo give context to my visualizations, I want to include a map, highlighting where Gerogia is and the exact location of the flux tower.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get data for all US states\nall_states <- map_data(\"state\") \n# filter to just get Georgia\nga <- filter(all_states, region == \"georgia\")\n# create data frame for the coordinate of the flux tower\nflux_tower <- data.frame(long = -81.28400, lat = 31.44986)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_polygon(data = all_states, aes(x=long, y=lat, group = group), colour=\"white\", fill=\"grey\" ) +\n  geom_polygon(data = ga, aes(x=long, y=lat, group = group),fill=\"seagreen\") +\n  geom_point(data = flux_tower, aes(x = long, y = lat),\n             color = \"#23341E\", size = 4, shape = 23, fill = \"purple\") +\n  theme_void()\n```\n:::\n\n\n![](infographic-final.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}